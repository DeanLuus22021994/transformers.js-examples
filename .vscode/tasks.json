{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Run All Tests",
			"type": "shell",
			"command": "node --experimental-vm-modules --max-old-space-size=8192 node_modules/jest/bin/jest.js",
			"group": {
				"kind": "test",
				"isDefault": true
			}
		},
		{
			"label": "Run Tests with Coverage",
			"type": "shell",
			"command": "node --experimental-vm-modules --max-old-space-size=8192 node_modules/jest/bin/jest.js --coverage",
			"group": "test"
		},
		{
			"label": "Run GPU Tests",
			"type": "shell",
			"command": "npm run test:gpu",
			"group": "test",
			"options": {
				"env": {
					"WEBGPU_FORCE_DISCRETE": "1",
					"GPU_MEMORY_LIMIT": "4096"
				}
			}
		},
		{
			"label": "Run Non-GPU Tests",
			"type": "shell",
			"command": "npm run test:no-gpu",
			"group": "test"
		},
		{
			"label": "Docker: Build Test Containers",
			"type": "shell",
			"command": "npm run docker:build",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "Docker: Run All Tests",
			"type": "shell",
			"command": "npm run docker:test:all",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Docker: Run Tests with Coverage",
			"type": "shell",
			"command": "npm run docker:test:coverage",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Docker: Run GPU Tests",
			"type": "shell",
			"command": "npm run docker:test:gpu",
			"group": "test",
			"problemMatcher": [],
			"options": {
				"env": {
					"NVIDIA_VISIBLE_DEVICES": "all",
					"NVIDIA_DRIVER_CAPABILITIES": "compute,utility,graphics"
				}
			}
		},
		{
			"label": "Docker: Run Non-GPU Tests",
			"type": "shell",
			"command": "npm run docker:test:no-gpu",
			"group": "test",
			"problemMatcher": []
		},
		{
			"label": "Build All Projects",
			"type": "shell",
			"command": "npm run build",
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		{
			"label": "Initialize Dev Container",
			"type": "shell",
			"command": "cd .devcontainer && docker-compose up -d"
		},
		{
			"label": "Run vanilla-js in Docker",
			"type": "shell",
			"command": "cd vanilla-js && docker-compose up",
			"problemMatcher": []
		},
		{
			"label": "Build and Pull Submodules",
			"type": "shell",
			"command": "bash .devcontainer/scripts/clone_submodules.sh && bash .devcontainer/scripts/build_all.sh",
			"problemMatcher": []
		},
		{
			"label": "Check GPU Status",
			"type": "shell",
			"command": "nvidia-smi || echo 'No GPU detected'",
			"problemMatcher": []
		},
		{
			"label": "Monitor GPU Usage",
			"type": "shell",
			"command": "nvidia-smi -l 2",
			"isBackground": true,
			"problemMatcher": []
		},
		{
			"label": "Optimize TypeScript Performance",
			"type": "shell",
			"command": "npm run build -- --incremental",
			"group": "build",
			"problemMatcher": [
				"$tsc"
			]
		},
		{
			"label": "Clear TypeScript Cache",
			"type": "shell",
			"command": "rm -f .tsbuildinfo && npm run build",
			"problemMatcher": []
		},
		{
			"label": "Start WebGPU Dev Server",
			"type": "shell",
			"command": "npx vite --force",
			"isBackground": true,
			"problemMatcher": {
				"pattern": {
					"regexp": ".",
					"file": 1
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": ".",
					"endsPattern": "ready in"
				}
			}
		},
		// Dev Debt Tasks
		{
			"label": "Process Dev Debt Files",
			"type": "shell",
			"command": "${command:dev-debt-processor.processDevDebt}",
			"problemMatcher": [],
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated",
				"showReuseMessage": false
			}
		},
		{
			"label": "Create Dev Debt Template",
			"type": "shell",
			"command": "${command:dev-debt-processor.createTemplate}",
			"problemMatcher": [],
			"group": "none"
		},
		{
			"label": "View Dev Debt Logs",
			"type": "shell",
			"command": "${command:dev-debt-processor.viewLogs}",
			"problemMatcher": [],
			"group": "none"
		},
		// Testing tasks with dependencies
		{
			"label": "GPU Test Pipeline",
			"dependsOn": [
				"Check GPU Status",
				"Build All Projects",
				"Run GPU Tests"
			],
			"dependsOrder": "sequence",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			}
		},
		{
			"label": "Docker: Full Test Pipeline",
			"dependsOn": [
				"Docker: Build Test Containers",
				"Docker: Run All Tests"
			],
			"dependsOrder": "sequence",
			"group": "test"
		},
		{
			"label": "Setup Development Environment",
			"dependsOn": [
				"Initialize Dev Container",
				"Build and Pull Submodules"
			],
			"dependsOrder": "sequence",
			"problemMatcher": []
		},
		{
			"label": "Full Test Suite",
			"dependsOn": [
				"Docker: Build Test Containers",
				"All Tests"
			],
			"dependsOrder": "sequence"
		},
		{
			"label": "All Tests",
			"dependsOn": [
				"Run GPU Tests",
				"Run Non-GPU Tests"
			],
			"dependsOrder": "parallel"
		},
		{
			"label": "Container: Setup Environment",
			"type": "shell",
			"command": "docker compose exec -t dev bash .devcontainer/scripts/setup/init.sh",
			"group": "build",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Container: Verify Setup",
			"type": "shell",
			"command": "docker compose exec -t dev bash .devcontainer/scripts/checks/readiness.sh",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Container: Force Precompile",
			"type": "shell",
			"command": "docker compose exec -t dev bash -c 'FORCE_PRECOMPILE=1 bash .devcontainer/scripts/precompile/trigger.sh'",
			"group": "build",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Container: Check GPU Status",
			"type": "shell",
			"command": "docker compose exec -t dev bash .devcontainer/scripts/checks/gpu-check.sh",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Container: Run Azure Check",
			"type": "shell",
			"command": "docker compose exec -t dev bash .devcontainer/scripts/checks/azure-check.sh",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Container: Execute Command",
			"type": "shell",
			"command": "docker compose exec -t dev bash -c '${input:containerCommand}'",
			"group": "none",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"label": "Scan Technical Debt",
			"type": "shell",
			"command": "docker-compose -f docker-compose.debt-scanner.yml up --build",
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"presentation": {
				"reveal": "always",
				"panel": "new",
				"focus": true
			},
			"problemMatcher": []
		}
	],
	"inputs": [
		{
			"id": "containerCommand",
			"description": "Command to execute in container",
			"default": "echo 'Hello from container'",
			"type": "promptString"
		}
	]
}