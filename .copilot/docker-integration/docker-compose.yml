version: '3.8'

# Main service for transformers.js Docker integration
services:
  # Core service that provides Docker integration functionality
  transformers-docker-core:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.core
    image: transformersjs-docker-integration:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app:ro  # Mark app volume as read-only for security
      - ${HOME}/.transformersjs-cache:/cache
    environment:
      - NODE_ENV=production
      - CACHE_DIR=/cache
      - LOG_LEVEL=info
    restart: unless-stopped
    networks:
      - transformers-net
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M  # Minimum memory reservation

  # GPU-accelerated model execution service
  transformers-gpu-runtime:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.core
      args:
        - WITH_GPU=true
    image: transformersjs-gpu-runtime:latest
    volumes:
      - ${HOME}/.transformersjs-cache:/cache
      - .:/app:ro  # Mark app volume as read-only for security
    environment:
      - NODE_ENV=production
      - GPU_MEMORY_LIMIT=4096
      - WEBGPU_FORCE_DISCRETE=1
    depends_on:
      - transformers-docker-core
    networks:
      - transformers-net
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # MCP Server for Model Context Protocol implementation
  transformers-mcp-server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.mcp
    image: transformersjs-mcp-server:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app:ro  # Mark app volume as read-only for security
      - ${HOME}/.transformersjs-cache:/cache
    ports:
      - "8083:8083"
    environment:
      - NODE_ENV=production
      - MCP_SERVER_PORT=8083
      - CACHE_DIR=/cache
      - LOG_LEVEL=info
    depends_on:
      - transformers-docker-core
    networks:
      - transformers-net
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Define network for all services
networks:
  transformers-net:
    driver: bridge